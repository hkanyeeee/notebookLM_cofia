{
  "name": "n => n",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "array2array",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -608,
        -80
      ],
      "id": "7ba5d90f-c2a1-4e26-864e-27fa8693e638",
      "name": "Webhook",
      "webhookId": "1050e1d6-b186-4159-a7cb-b52219496f08"
    },
    {
      "parameters": {
        "operation": "incr",
        "key": "={{ 'idem:' + $('Webhook').item.json.body.request_id }}",
        "expire": true,
        "ttl": 86400
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -416,
        -416
      ],
      "id": "3e23af51-88a6-4c04-91f6-b62e768a64fb",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "q59KGK6FiOOK7XE2",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "24c9a786-2991-44f1-86ec-64a1ba6297dc",
              "leftValue": "={{ $json['idem:' + $('Webhook').item.json.body.request_id] }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -160,
        -80
      ],
      "id": "a678a4ba-d94c-4ef7-8af2-409d592e6a62",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ 'status:' + $('Webhook').item.json.body.request_id }}",
        "value": "={{ JSON.stringify({ state: 'processing', ts: $now }) }}",
        "keyType": "string",
        "expire": true,
        "ttl": 259200
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        112,
        -448
      ],
      "id": "b9f8863a-4572-4b7f-8133-1cfadde7207e",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "q59KGK6FiOOK7XE2",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=待处理内容 {{ JSON.stringify($json) }} ，你需要做的：{{ $('Webhook').item.json.body.prompt }}\n注意：你需要返回一个json，只有response对象，response中的属性按上述要求进行赋值，如果没要求，需要你定一下。",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        784,
        -208
      ],
      "id": "879781d0-37ae-464d-a3bb-4c98fdd2a492",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "qwen/qwen3-coder-30b",
          "mode": "list",
          "cachedResultName": "qwen/qwen3-coder-30b"
        },
        "options": {
          "timeout": 360000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        720,
        32
      ],
      "id": "87c5141d-3d6c-4b4f-be0f-7d93238856bd",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "Eu6L33RQ3zk3fvqo",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "qwen3-30b-a3b-thinking-2507-mlx",
          "mode": "list",
          "cachedResultName": "qwen3-30b-a3b-thinking-2507-mlx"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        896,
        208
      ],
      "id": "2ef4d6b0-8492-4d94-82f9-64231649c452",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "Eu6L33RQ3zk3fvqo",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"response\": {\n      \"additionalProperties\": true\n    }\n  }\n}\n",
        "autoFix": true,
        "customizeRetryPrompt": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        896,
        32
      ],
      "id": "40bf6d67-f41a-4d7c-a718-219b57274930",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://backend:8000/workflow_response",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "output",
              "value": "={{ $json.data_list.map(item => item.output) }}"
            },
            {
              "name": "request_id",
              "value": "={{ $('Webhook').item.json.body.request_id }}"
            },
            {
              "name": "recursive_depth",
              "value": "={{ $('Webhook').item.json.body.recursive_depth }}"
            },
            {
              "name": "task_name",
              "value": "={{ $('Webhook').item.json.body.task_name }}"
            },
            {
              "name": "url",
              "value": "={{ $('Webhook').item.json.body.url }}"
            },
            {
              "name": "document_name",
              "value": "={{ $('Webhook').item.json.body.document_name }}"
            },
            {
              "name": "collection_name",
              "value": "={{ $('Webhook').item.json.body.collection_name }}"
            },
            {
              "name": "=total_chunks",
              "value": "={{ $('Webhook').item.json.body.total_chunks }}"
            },
            {
              "name": "webhook_url",
              "value": "={{ $('Webhook').item.json.webhook_url }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1872,
        -208
      ],
      "id": "d2127dc2-d547-4f9e-9356-fcca9fca8286",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ 'result:' + $('Webhook').item.json.body.request_id }}",
        "value": "={{ JSON.stringify($json) }}",
        "keyType": "string",
        "expire": true,
        "ttl": 604800
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1376,
        -608
      ],
      "id": "e637de7d-3ef3-42bb-9ffa-9162bf7dfa39",
      "name": "Redis2 (Save Result)",
      "credentials": {
        "redis": {
          "id": "q59KGK6FiOOK7XE2",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ 'status:' + $('Webhook').item.json.body.request_id }}",
        "value": "={{ JSON.stringify({ state: 'done', ts: $now }) }}",
        "keyType": "string",
        "expire": true,
        "ttl": 259200
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1616,
        -608
      ],
      "id": "44399a75-6586-4255-a3c6-9493d9ea4cbf",
      "name": "Redis3",
      "credentials": {
        "redis": {
          "id": "q59KGK6FiOOK7XE2",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://backend:8000/workflow_response",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "output",
              "value": "=dupicated"
            },
            {
              "name": "request_id",
              "value": "={{ $('Webhook').item.json.body.request_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        128,
        80
      ],
      "id": "0f26acbd-2646-41f6-9fb2-1caba109f8fd",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "data_list",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1136,
        -208
      ],
      "id": "65f378da-d279-4183-85ee-62734b07f3e3",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "fieldToSplitOut": "body.data_list",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        544,
        -208
      ],
      "id": "f3192691-703d-4b09-914f-df1d9b06a160",
      "name": "Split Out"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "528c84fc-3bdd-499d-8673-d2264d94f648",
              "name": "body.data_list",
              "value": "={{ $('Webhook').item.json.body.data_list }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        336,
        -208
      ],
      "id": "d562c864-1a24-4f97-a12c-1be79bb5b0d9",
      "name": "Edit Fields"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        []
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        []
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Redis2 (Save Result)": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        []
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "79137d32-790f-471d-ab76-346806546316",
  "meta": {
    "instanceId": "49948187dff24f20d59ed246a03374f7ebe0523b1a6c50181f0425d516497ad9"
  },
  "id": "pF3AD7fw6SKiAdO2",
  "tags": []
}