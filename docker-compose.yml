version: "3.9"

networks:
  # 统一把所有相关容器放进同一个自定义网络
  localnet:
    name: localnet
    external: true  # 先手动创建：docker network create localnet

volumes:
  n8n_data:
  # qdrant_data:  # 如在 compose 内启用 qdrant，再打开

services:
  # -------------------
  # 可选：如你想把 Qdrant 也放进同一个 compose，就取消下面整段注释
  # -------------------
  # qdrant:
  #   image: qdrant/qdrant:latest
  #   container_name: qdrant
  #   restart: unless-stopped
  #   networks: [localnet]
  #   expose:
  #     - "6333"           # 供容器内访问，不对外暴露
  #   # 如需要从宿主或局域网访问，再映射端口
  #   # ports:
  #   #   - "6333:6333"
  #   # volumes:
  #   #   - qdrant_data:/qdrant/storage

  backend:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: notebooklm-backend
    environment:
      - DATABASE_URL=sqlite+aiosqlite:///data/app.db
      # 如果用容器里的 qdrant，默认用服务名；如仍用宿主机/外部的 qdrant，可通过 .env 覆盖 QDRANT_HOST
      - QDRANT_HOST=${QDRANT_HOST:-qdrant}
      - QDRANT_PORT=${QDRANT_PORT:-6333}
      # 代理（按需保留/删除）
      - PROXY_URL=${PROXY_URL:-http://192.168.31.167:7890}
      # 嵌入与大模型服务
      - EMBEDDING_SERVICE_URL=${EMBEDDING_SERVICE_URL:-http://embedding-gateway:7998/v1}
      - LLM_SERVICE_URL=${LLM_SERVICE_URL:-http://host.docker.internal:1234/v1}
      - RERANKER_SERVICE_URL=${RERANKER_SERVICE_URL:-}
      - SEARXNG_QUERY_URL=${SEARXNG_QUERY_URL:-http://host.docker.internal:8080/search}
      # 后端给 n8n 回调时的地址，建议用容器名，避免写死宿主机 IP
      - WEBHOOK_PREFIX=${WEBHOOK_PREFIX:-http://n8n:5678/webhook}
      # N8N 配置
      - N8N_BASE_URL=${N8N_BASE_URL:-http://n8n:5678/api/v1}
      - N8N_API_KEY="${N8N_API_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkZmZhZDY5OC03ZjI3LTQ3NGUtYjIxMy0zYzc5MWNmYjUzZDciLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzU1ODUzMTAwfQ.9uNlOMHCh49lvxMybMv_BJy76-ptqp48FIsfwCBX4NM}"
      - N8N_USERNAME="${N8N_USERNAME:-hkanyeeee@gmail.com}"
      - N8N_PASSWORD="${N8N_PASSWORD:-m63m3kuMMgXTqWw}"
      
      # Qdrant 扩展配置
      - QDRANT_API_KEY=${QDRANT_API_KEY:-}
      - QDRANT_COLLECTION_NAME=${QDRANT_COLLECTION_NAME:-notebooklm_prod}
      
      # 重排序和嵌入配置
      - RERANKER_MAX_TOKENS=${RERANKER_MAX_TOKENS:-8192}
      - RERANK_CLIENT_MAX_CONCURRENCY=${RERANK_CLIENT_MAX_CONCURRENCY:-4}
      - EMBEDDING_MAX_CONCURRENCY=${EMBEDDING_MAX_CONCURRENCY:-4}
      - EMBEDDING_BATCH_SIZE=${EMBEDDING_BATCH_SIZE:-4}
      - EMBEDDING_DIMENSIONS=${EMBEDDING_DIMENSIONS:-1024}
      
      # Webhook 配置
      - WEBHOOK_TIMEOUT=${WEBHOOK_TIMEOUT:-30}
      
      # 工具相关配置
      - DEFAULT_TOOL_MODE=${DEFAULT_TOOL_MODE:-auto}
      - MAX_TOOL_STEPS=${MAX_TOOL_STEPS:-8}
      
      # Web 搜索配置
      - WEB_SEARCH_RESULT_COUNT=${WEB_SEARCH_RESULT_COUNT:-2}
      - WEB_SEARCH_MAX_QUERIES=${WEB_SEARCH_MAX_QUERIES:-20}
      - WEB_SEARCH_MAX_RESULTS=${WEB_SEARCH_MAX_RESULTS:-40}
      - WEB_SEARCH_CONCURRENT_REQUESTS=${WEB_SEARCH_CONCURRENT_REQUESTS:-10}
      - WEB_SEARCH_TIMEOUT=${WEB_SEARCH_TIMEOUT:-10.0}
      - MAX_WORDS_PER_QUERY=${MAX_WORDS_PER_QUERY:-4}
      
      # 知识缺口和关键词配置
      - MAX_KNOWLEDGE_GAPS=${MAX_KNOWLEDGE_GAPS:-10}
      - MAX_KEYWORDS_PER_GAP=${MAX_KEYWORDS_PER_GAP:-2}
      - GAP_RECALL_TOP_K=${GAP_RECALL_TOP_K:-4}
      
      # Web 爬取配置
      - WEB_LOADER_ENGINE=${WEB_LOADER_ENGINE:-safe_web}
      - PLAYWRIGHT_TIMEOUT=${PLAYWRIGHT_TIMEOUT:-10.0}
      
      # 查询生成配置
      - ENABLE_QUERY_GENERATION=${ENABLE_QUERY_GENERATION:-true}
      - QUERY_GENERATION_PROMPT_TEMPLATE=${QUERY_GENERATION_PROMPT_TEMPLATE:-}
      
      # Web 缓存配置
      - WEB_CACHE_ENABLED=${WEB_CACHE_ENABLED:-true}
      - WEB_CACHE_MAX_SIZE=${WEB_CACHE_MAX_SIZE:-1000}
      - WEB_CACHE_TTL_SECONDS=${WEB_CACHE_TTL_SECONDS:-3600}
      - WEB_CACHE_MAX_CONTENT_SIZE=${WEB_CACHE_MAX_CONTENT_SIZE:-1048576}
      
      # 文档处理配置
      - CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-100}
      
      # RAG 配置
      - RAG_TOP_K=${RAG_TOP_K:-15}
      - QUERY_TOP_K_BEFORE_RERANK=${QUERY_TOP_K_BEFORE_RERANK:-200}
      - RAG_RERANK_TOP_K=${RAG_RERANK_TOP_K:-15}
      
      # LLM 配置
      - LLM_DEFAULT_TIMEOUT=${LLM_DEFAULT_TIMEOUT:-3600.0}
      - DEFAULT_SEARCH_MODEL=${DEFAULT_SEARCH_MODEL:-openai/gpt-oss-20b}
      - DEFAULT_INGEST_MODEL=${DEFAULT_INGEST_MODEL:-qwen/qwen3-coder-30b}
      - DEFAULT_EMBEDDING_MODEL=${DEFAULT_EMBEDDING_MODEL:-Qwen/Qwen3-Embedding-0.6B}
      
      # 推理引擎配置
      - REASONING_TIMEOUT=${REASONING_TIMEOUT:-3600.0}
      - WEB_SEARCH_LLM_TIMEOUT=${WEB_SEARCH_LLM_TIMEOUT:-1800.0}
    volumes:
      - ./data:/app/data
    depends_on:
      - embedding-gateway
    networks:
      - localnet
    ports:
      - "8000:8000"   # 供宿主机访问；容器间仍可用服务名 backend:8000

  frontend:
    restart: always
    build:
      context: ./notebookLM_front
      dockerfile: Dockerfile
      args:
        NPM_REGISTRY: ${NPM_REGISTRY:-https://registry.npmjs.org}
        HTTP_PROXY: ${HTTP_PROXY:-}
        HTTPS_PROXY: ${HTTPS_PROXY:-}
        NO_PROXY: ${NO_PROXY:-}
    container_name: notebooklm-frontend
    ports:
      - "9001:80"
    depends_on:
      - backend
    networks:
      - localnet

  embedding-gateway:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: embedding-gateway
    ports:
      - "7998:7998"   # 如需从宿主/局域网调用保留；仅容器内互访其实不必映射
    command: ["python", "embedding_gateway.py"]
    environment:
      - EMBEDDING_BACKENDS=${EMBEDDING_BACKENDS:-http://192.168.31.98:7998/v1,http://192.168.31.231:7998/v1}
    networks:
      - localnet
    expose:
      - "7998"

  # ============ 新增 n8n ============
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    ports:
      - "5678:5678"     # 局域网通过 http://<宿主机IP>:5678 访问
    environment:
      - TZ=Asia/Shanghai
      # 把下行的默认值换成你的宿主机局域网 IP 或内网域名；也可在 .env 里设置 N8N_HOST
      - N8N_HOST=${N8N_HOST:-192.168.31.125}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://${N8N_HOST:-192.168.31.125}:5678
      - N8N_EDITOR_BASE_URL=http://${N8N_HOST:-192.168.31.125}:5678
      - N8N_SECURE_COOKIE=false
      - N8N_DIAGNOSTICS_ENABLED=false
      # 基础鉴权（建议开启，或日后放到反代后做更强鉴权）
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-true}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-change-me}
      - N8N_EXECUTIONS_MODE=queue
      - N8N_CONCURRENCY_PRODUCTION_LIMIT=1
      - EXECUTIONS_TIMEOUT=-1
      - EXECUTIONS_TIMEOUT_MAX=36000
      - QUEUE_BULL_PREFIX=n8n
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - localnet
    depends_on:
      - backend
      - embedding-gateway
      # - qdrant  # 如果在本 compose 内启用了 qdrant，则取消注释
